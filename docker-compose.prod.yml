version: '3.7'

services:
  nginx:
    build:
      context: .
      target: nginx
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.astra50-gate.rule=Host(`gate.astra50.ru`)"
      - "traefik.http.routers.astra50-gate.entrypoints=websecure"
      - "traefik.http.routers.astra50-gate.tls=true"
      - "traefik.http.routers.astra50-gate.tls.certresolver=leresolver"
      - "traefik.http.services.astra50-gate-service.loadbalancer.server.port=80"
      - "traefik.http.services.astra50-gate-service.loadbalancer.server.scheme=http"
    environment:
      PHP_FPM_HOST: php-fpm
    networks:
      - default
      - traefik

  php-fpm: &app
    build:
      context: .
      target: php
    environment:
      APP_SECRET: ${APP_SECRET}
      POSTGRES_DATABASE: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      DATABASE_PASSWORD: ${POSTGRES_PASSWORD}
      VKONTAKTE_ID: ${VKONTAKTE_ID}
      VKONTAKTE_SECRET: ${VKONTAKTE_SECRET}
      YANDEX_ID: ${YANDEX_ID}
      YANDEX_SECRET: ${YANDEX_SECRET}
      GOOGLE_ID: ${GOOGLE_ID}
      GOOGLE_SECRET: ${GOOGLE_SECRET}
      INSTAGRAM_ID: ${INSTAGRAM_ID}
      INSTAGRAM_SECRET: ${INSTAGRAM_SECRET}
      MAILRU_ID: ${MAILRU_ID}
      MAILRU_PRIVATE: ${MAILRU_PRIVATE}
      MAILRU_SECRET: ${MAILRU_SECRET}
      CENTRIFUGO_SECRET: ${CENTRIFUGO_SECRET}
      CENTRIFUGO_API_KEY: ${CENTRIFUGO_API_KEY}
      CENTRIFUGO_ADMIN_PASSWORD: ${CENTRIFUGO_ADMIN_PASSWORD}
      CENTRIFUGO_ADMIN_SECRET: ${CENTRIFUGO_ADMIN_SECRET}
      SENTRY_DSN: ${SENTRY_DSN}
      SITE_SECRET: ${SITE_SECRET}
    stop_grace_period: 120s

  migration:
    <<: *app
    labels:
      - "traefik.enable=false"
    command: wait-for-it.sh postgres:5432 -- console doctrine:migrations:migrate --no-interaction --allow-no-migration

  postgres:
    image: postgres:14.2-alpine
    volumes:
      - ../../data/astra50gate/postgres/data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    healthcheck:
      test: pg_isready -U db
      interval: 5s
      timeout: 5s
      retries: 3
      start_period: 10s

  postgres_backup:
    image: postgres:14.2-alpine
    entrypoint: /bin/sh
    command:
      - -c
      - |
        apk add --no-cache tini gzip \
        && echo $$'
        postgres:5432:${POSTGRES_DB}:${POSTGRES_USER}:${POSTGRES_PASSWORD}
        ' > ~/.pgpass \
        && chmod 600 ~/.pgpass \
        && echo $$'
        10 3 * * * pg_dump -h postgres -U ${POSTGRES_USER} ${POSTGRES_DB} | gzip > /backups/$$(date +"%Y%m%d_%H%M%S")_${POSTGRES_DB}.sql.gz
        ' | crontab - \
        && exec tini -- crond -l 0 -f
    volumes:
      - ../../backups:/backups
    healthcheck:
      disable: true

  memcached:
    image: memcached:1.6.9-alpine
    healthcheck:
      test: nc -z 127.0.0.1 11211
      interval: 5s
      timeout: 5s
      retries: 3
      start_period: 5s

  centrifugo:
    image: centrifugo/centrifugo:v2.7.0
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.astra50-centrifugo.rule=Host(`centrifugo.astra50.ru`)"
      - "traefik.http.routers.astra50-centrifugo.entrypoints=websecure"
      - "traefik.http.routers.astra50-centrifugo.tls=true"
      - "traefik.http.routers.astra50-centrifugo.tls.certresolver=leresolver"
      - "traefik.http.services.astra50-centrifugo-service.loadbalancer.server.port=80"
      - "traefik.http.services.astra50-centrifugo-service.loadbalancer.server.scheme=http"
    environment:
      CENTRIFUGO_PORT: 80
      CENTRIFUGO_ADMIN: 'true'
      CENTRIFUGO_TOKEN_HMAC_SECRET_KEY: ${CENTRIFUGO_SECRET}
      CENTRIFUGO_API_KEY: ${CENTRIFUGO_API_KEY}
      CENTRIFUGO_ADMIN_PASSWORD: ${CENTRIFUGO_ADMIN_PASSWORD}
      CENTRIFUGO_ADMIN_SECRET: ${CENTRIFUGO_ADMIN_SECRET}
    networks:
      - traefik
      - default

networks:
  traefik:
    external: true
    name: traefik
  default:
    name: astra50gate
